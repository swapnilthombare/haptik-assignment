{"version":3,"sources":["logo.svg","components/appBar/PrimarySearchAppBar.jsx","components/productCard/ProductCard.jsx","data/static-data.js","components/productCard/ProductCardList.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","useStyles","makeStyles","theme","grow","flexGrow","menuButton","marginRight","spacing","title","display","breakpoints","up","inputRoot","color","inputInput","padding","transition","transitions","create","width","sectionDesktop","sectionMobile","PrimarySearchAppBar","classes","React","useState","anchorEl","setAnchorEl","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMenuOpen","Boolean","isMobileMenuOpen","handleProfileMenuOpen","event","currentTarget","handleMobileMenuClose","handleMenuClose","menuId","renderMenu","Menu","anchorOrigin","vertical","horizontal","id","keepMounted","transformOrigin","open","onClose","MenuItem","onClick","renderMobileMenu","IconButton","aria-label","Badge","badgeContent","aria-controls","aria-haspopup","className","AppBar","position","Toolbar","Typography","variant","noWrap","edge","card","maxWidth","cardContent","textAlign","likeButton","iconButton","day","fontSize","right","cardActions","ImgMediaCard","props","imgSrc","description","heading","likes","setLikes","Card","key","CardActionArea","CardMedia","component","height","image","CardContent","gutterBottom","CardActions","size","imgIDArray","Math","floor","random","cardListDummy","gridContainer","justifyContent","gridItem","flexBasis","ProductCardList","Grid","container","map","item","xs","client","ApolloClient","uri","App","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4ccc878b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";","import React from \"react\";\r\nimport { fade, makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport Badge from \"@material-ui/core/Badge\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\r\nimport MailIcon from \"@material-ui/icons/Mail\";\r\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\r\nimport MoreIcon from \"@material-ui/icons/MoreVert\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  grow: {\r\n    flexGrow: 1\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  title: {\r\n    display: \"none\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      display: \"block\"\r\n    }\r\n  },\r\n  inputRoot: {\r\n    color: \"inherit\"\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 7),\r\n    transition: theme.transitions.create(\"width\"),\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      width: 200\r\n    }\r\n  },\r\n  sectionDesktop: {\r\n    display: \"none\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      display: \"flex\"\r\n    }\r\n  },\r\n  sectionMobile: {\r\n    display: \"flex\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      display: \"none\"\r\n    }\r\n  }\r\n}));\r\n\r\nconst PrimarySearchAppBar = () => {\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\r\n\r\n  const isMenuOpen = Boolean(anchorEl);\r\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\r\n\r\n  const handleProfileMenuOpen = event => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleMobileMenuClose = () => {\r\n    setMobileMoreAnchorEl(null);\r\n  };\r\n\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null);\r\n    handleMobileMenuClose();\r\n  };\r\n\r\n  const handleMobileMenuOpen = event => {\r\n    setMobileMoreAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const menuId = \"primary-search-account-menu\";\r\n  const renderMenu = (\r\n    <Menu\r\n      anchorEl={anchorEl}\r\n      anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      id={menuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      open={isMenuOpen}\r\n      onClose={handleMenuClose}\r\n    >\r\n      <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\r\n      <MenuItem onClick={handleMenuClose}>My account</MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  const mobileMenuId = \"primary-search-account-menu-mobile\";\r\n  const renderMobileMenu = (\r\n    <Menu\r\n      anchorEl={mobileMoreAnchorEl}\r\n      anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      id={mobileMenuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      open={isMobileMenuOpen}\r\n      onClose={handleMobileMenuClose}\r\n    >\r\n      <MenuItem>\r\n        <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\r\n          <Badge badgeContent={4} color=\"secondary\">\r\n            <FavoriteIcon />\r\n          </Badge>\r\n        </IconButton>\r\n        <p>Messages</p>\r\n      </MenuItem>\r\n      <MenuItem>\r\n        <IconButton aria-label=\"show 11 new notifications\" color=\"inherit\">\r\n          <Badge badgeContent={11} color=\"secondary\">\r\n            <NotificationsIcon />\r\n          </Badge>\r\n        </IconButton>\r\n        <p>Notifications</p>\r\n      </MenuItem>\r\n      <MenuItem onClick={handleProfileMenuOpen}>\r\n        <IconButton\r\n          aria-label=\"account of current user\"\r\n          aria-controls=\"primary-search-account-menu\"\r\n          aria-haspopup=\"true\"\r\n          color=\"inherit\"\r\n        >\r\n          <AccountCircle />\r\n        </IconButton>\r\n        <p>Profile</p>\r\n      </MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  return (\r\n    <div className={classes.grow}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <Typography className={classes.title} variant=\"h6\" noWrap>\r\n            Product Hunt\r\n          </Typography>\r\n          <div className={classes.grow} />\r\n          <div className={classes.sectionDesktop}>\r\n            <IconButton aria-label=\"show 4 new liked\" color=\"inherit\">\r\n              <Badge badgeContent={4} color=\"secondary\">\r\n                <FavoriteIcon />\r\n              </Badge>\r\n            </IconButton>\r\n            \r\n            <IconButton\r\n              edge=\"end\"\r\n              aria-label=\"account of current user\"\r\n              aria-controls={menuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleProfileMenuOpen}\r\n              color=\"inherit\"\r\n            >\r\n              <AccountCircle />\r\n            </IconButton>\r\n          </div>\r\n          <div className={classes.sectionMobile}>\r\n            <IconButton\r\n              aria-label=\"show more\"\r\n              aria-controls={mobileMenuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleMobileMenuOpen}\r\n              color=\"inherit\"\r\n            >\r\n              <MoreIcon />\r\n            </IconButton>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n      {renderMobileMenu}\r\n      {renderMenu}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PrimarySearchAppBar;\r\n","import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/Button\";\r\nimport FavoriteBorderOutlinedIcon from \"@material-ui/icons/FavoriteBorderOutlined\";\r\nimport AddCommentOutlinedIcon from \"@material-ui/icons/AddCommentOutlined\";\r\n\r\nconst useStyles = makeStyles({\r\n  card: {\r\n    maxWidth: 345\r\n  },\r\n  cardContent: {\r\n    textAlign: \"left\"\r\n  },\r\n  likeButton: {\r\n    color: \"red\",\r\n    position: \"relative\"\r\n  },\r\n  iconButton: {\r\n    padding: 0\r\n  },\r\n  day: {\r\n    textAlign: \"right\",\r\n    fontSize: \"10px\",\r\n    color: \"gray\",\r\n    position: \"absolute\",\r\n    \"padding-right\": \"inherit\",\r\n    right: \"8px\"\r\n  },\r\n  cardActions: {\r\n    position: \"relative\"\r\n  }\r\n});\r\n\r\nexport default function ImgMediaCard(props) {\r\n  const classes = useStyles();\r\n  const { id, imgSrc, description, heading, day } = props;\r\n\r\n  const [likes, setLikes] = useState(0);\r\n\r\n  const onLikeHandler = () => {\r\n    setLikes(likes + 1);\r\n  };\r\n\r\n  return (\r\n    <Card className={classes.card} key={id}>\r\n      <CardActionArea>\r\n        <CardMedia component=\"img\" height=\"240\" image={imgSrc} />\r\n        <CardContent className={classes.cardContent}>\r\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n            {heading}\r\n          </Typography>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n            {description}\r\n          </Typography>\r\n          \r\n        </CardContent>\r\n      </CardActionArea>\r\n      <CardActions className={classes.cardActions}>\r\n        <IconButton\r\n          aria-label=\"like\"\r\n          size=\"medium\"\r\n          color=\"black\"\r\n          onClick={onLikeHandler}\r\n        >\r\n          <FavoriteBorderOutlinedIcon />\r\n        </IconButton>\r\n        <IconButton aria-label=\"comment\" size=\"medium\" color=\"black\">\r\n          <AddCommentOutlinedIcon />\r\n        </IconButton>\r\n        <Typography\r\n          variant=\"subtitle2\"\r\n          color=\"textSecondary\"\r\n          component=\"p\"\r\n          className={classes.day}\r\n        >\r\n          Posted on | {day}\r\n        </Typography>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n}\r\n","const imgIDArray = () => {\r\n  const imgId = Math.floor(Math.random() * 1000 + 1);\r\n  return \"https://picsum.photos/id/\" + imgId + \"/500\";\r\n};\r\n\r\nconst cardListDummy = [\r\n  {\r\n    imgSrc: imgIDArray(),\r\n    day: \"2017-09-14\",\r\n    heading: \"Heading\",\r\n    description:\r\n      \"To keep moving forward againt the friction, we overcome the ______ friction.\",\r\n    id: 11\r\n  },\r\n  {\r\n    imgSrc: imgIDArray(),\r\n    day: \"2017-09-14\",\r\n    heading: \"Heading\",\r\n    description:\r\n      \"To keep moving forward againt the friction, we overcome the ______ friction.\",\r\n    id: 12\r\n  },\r\n  {\r\n    imgSrc: imgIDArray(),\r\n    day: \"2017-09-14\",\r\n    heading: \"Heading\",\r\n    description:\r\n      \"To keep moving forward againt the friction, we overcome the ______ friction.\",\r\n    id: 10\r\n  },\r\n  {\r\n    imgSrc: imgIDArray(),\r\n    day: \"2017-09-14\",\r\n    heading: \"Heading\",\r\n    description:\r\n      \"To keep moving forward againt the friction, we overcome the ______ friction.\",\r\n    id: 14\r\n  },\r\n  {\r\n    imgSrc: imgIDArray(),\r\n    day: \"2017-09-14\",\r\n    heading: \"Heading\",\r\n    description:\r\n      \"To keep moving forward againt the friction, we overcome the ______ friction.\",\r\n    id: 14\r\n  },\r\n  {\r\n    imgSrc: imgIDArray(),\r\n    day: \"2017-09-14\",\r\n    heading: \"Heading\",\r\n    description:\r\n      \"To keep moving forward againt the friction, we overcome the ______ friction.\",\r\n    id: 14\r\n  },\r\n  {\r\n    imgSrc: imgIDArray(),\r\n    day: \"2017-09-14\",\r\n    heading: \"Heading\",\r\n    description:\r\n      \"To keep moving forward againt the friction, we overcome the ______ friction.\",\r\n    id: 14\r\n  }\r\n];\r\n\r\nexport default cardListDummy;\r\n","import React, { useState } from \"react\";\r\nimport ProductCard from \"./ProductCard\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport cardListDummy from \"../../data/static-data\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles({\r\n  gridContainer: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\"\r\n  },\r\n  gridItem: {\r\n    flexBasis: \"unset\",\r\n    padding: \"12px\"\r\n  }\r\n});\r\n\r\nconst ProductCardList = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div>\r\n      <Grid container spacing={24} className={classes.gridContainer}>\r\n        {cardListDummy.map(card => {\r\n          return (\r\n            <Grid item xs={12} className={classes.gridItem}>\r\n              <ProductCard\r\n                id={card.id}\r\n                imgSrc={card.imgSrc}\r\n                description={card.description}\r\n                heading={card.heading}\r\n                day={card.day}\r\n              ></ProductCard>\r\n            </Grid>\r\n          );\r\n        })}\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductCardList;\r\n","import React from \"react\";\nimport ApolloClient from \"apollo-boost\";\nimport { ApolloProvider } from \"react-apollo\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport PrimarySearchAppBar from \"./components/appBar/PrimarySearchAppBar\";\nimport ProductCardList from \"./components/productCard/ProductCardList\";\n\nconst client = new ApolloClient({\n  uri: \"https://ph-graph-api-explorer.herokuapp.com/graphql\"\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <div className=\"App\">\n        <PrimarySearchAppBar></PrimarySearchAppBar>\n        <main className=\"main\">\n          <ProductCardList></ProductCardList>\n        </main>\n      </div>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}