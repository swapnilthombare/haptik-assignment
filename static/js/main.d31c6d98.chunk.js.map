{"version":3,"sources":["logo.svg","components/appBar/PrimarySearchAppBar.jsx","components/productCard/ProductCard.jsx","data/static-data.js","components/productCard/ProductCardList.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","useStyles","makeStyles","theme","grow","flexGrow","menuButton","marginRight","spacing","title","breakpoints","up","display","inputRoot","color","inputInput","padding","transition","transitions","create","width","sectionDesktop","sectionMobile","PrimarySearchAppBar","classes","React","useState","anchorEl","setAnchorEl","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMenuOpen","Boolean","isMobileMenuOpen","handleProfileMenuOpen","event","currentTarget","handleMobileMenuClose","handleMenuClose","menuId","renderMenu","Menu","anchorOrigin","vertical","horizontal","id","keepMounted","transformOrigin","open","onClose","MenuItem","onClick","renderMobileMenu","IconButton","aria-label","Badge","badgeContent","aria-controls","aria-haspopup","className","AppBar","position","Toolbar","Typography","variant","noWrap","edge","card","maxWidth","cardContent","textAlign","likeButton","iconButton","day","fontSize","right","cardActions","description","height","ImgMediaCard","props","imgSrc","heading","likes","setLikes","Card","key","CardActionArea","CardMedia","component","image","CardContent","gutterBottom","CardActions","size","cardListDummy","name","createdAt","thumbnail","url","gridContainer","justifyContent","gridItem","flexBasis","ProductCardList","Grid","container","map","item","xs","client","ApolloClient","uri","App","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"+JAAAA,EAAOC,QAAU,IAA0B,kC,mRCiBrCC,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJC,SAAU,GAEZC,WAAY,CACVC,YAAaJ,EAAMK,QAAQ,IAE7BC,MAAM,eAEHN,EAAMO,YAAYC,GAAG,MAAQ,CAC5BC,QAAS,UAGbC,UAAW,CACTC,MAAO,WAETC,WAAW,aACTC,QAASb,EAAMK,QAAQ,EAAG,EAAG,EAAG,GAChCS,WAAYd,EAAMe,YAAYC,OAAO,SACrCC,MAAO,QACNjB,EAAMO,YAAYC,GAAG,MAAQ,CAC5BS,MAAO,MAGXC,eAAe,aACbT,QAAS,QACRT,EAAMO,YAAYC,GAAG,MAAQ,CAC5BC,QAAS,SAGbU,cAAc,aACZV,QAAS,QACRT,EAAMO,YAAYC,GAAG,MAAQ,CAC5BC,QAAS,aA4HAW,EAvHa,WAC1B,IAAMC,EAAUvB,IADgB,EAEAwB,IAAMC,SAAS,MAFf,mBAEzBC,EAFyB,KAEfC,EAFe,OAGoBH,IAAMC,SAAS,MAHnC,mBAGzBG,EAHyB,KAGLC,EAHK,KAK1BC,EAAaC,QAAQL,GACrBM,EAAmBD,QAAQH,GAE3BK,EAAwB,SAAAC,GAC5BP,EAAYO,EAAMC,gBAGdC,EAAwB,WAC5BP,EAAsB,OAGlBQ,EAAkB,WACtBV,EAAY,MACZS,KAOIE,EAAS,8BACTC,EACJ,kBAACC,EAAA,EAAD,CACEd,SAAUA,EACVe,aAAc,CAAEC,SAAU,MAAOC,WAAY,SAC7CC,GAAIN,EACJO,aAAW,EACXC,gBAAiB,CAAEJ,SAAU,MAAOC,WAAY,SAChDI,KAAMjB,EACNkB,QAASX,GAET,kBAACY,EAAA,EAAD,CAAUC,QAASb,GAAnB,WACA,kBAACY,EAAA,EAAD,CAAUC,QAASb,GAAnB,eAKEc,EACJ,kBAACX,EAAA,EAAD,CACEd,SAAUE,EACVa,aAAc,CAAEC,SAAU,MAAOC,WAAY,SAC7CC,GALiB,qCAMjBC,aAAW,EACXC,gBAAiB,CAAEJ,SAAU,MAAOC,WAAY,SAChDI,KAAMf,EACNgB,QAASZ,GAET,kBAACa,EAAA,EAAD,KACE,kBAACG,EAAA,EAAD,CAAYC,aAAW,mBAAmBxC,MAAM,WAC9C,kBAACyC,EAAA,EAAD,CAAOC,aAAc,EAAG1C,MAAM,aAC5B,kBAAC,IAAD,QAGJ,8CAEF,kBAACoC,EAAA,EAAD,CAAUC,QAASjB,GACjB,kBAACmB,EAAA,EAAD,CACEC,aAAW,0BACXG,gBAAc,8BACdC,gBAAc,OACd5C,MAAM,WAEN,kBAAC,IAAD,OAEF,wCAKN,OACE,yBAAK6C,UAAWnC,EAAQpB,MACtB,kBAACwD,EAAA,EAAD,CAAQC,SAAS,UACf,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAYJ,UAAWnC,EAAQf,MAAOuD,QAAQ,KAAKC,QAAM,GAAzD,gBAGA,yBAAKN,UAAWnC,EAAQpB,OACxB,yBAAKuD,UAAWnC,EAAQH,gBACtB,kBAACgC,EAAA,EAAD,CAAYC,aAAW,mBAAmBxC,MAAM,WAC9C,kBAACyC,EAAA,EAAD,CAAOC,aAAc,EAAG1C,MAAM,aAC5B,kBAAC,IAAD,QAIJ,kBAACuC,EAAA,EAAD,CACEa,KAAK,MACLZ,aAAW,0BACXG,gBAAelB,EACfmB,gBAAc,OACdP,QAASjB,EACTpB,MAAM,WAEN,kBAAC,IAAD,QAGJ,yBAAK6C,UAAWnC,EAAQF,eACtB,kBAAC+B,EAAA,EAAD,CACEC,aAAW,YACXG,gBA9DS,qCA+DTC,gBAAc,OACdP,QApFiB,SAAAhB,GAC3BL,EAAsBK,EAAMC,gBAoFlBtB,MAAM,WAEN,kBAAC,IAAD,UAKPsC,EACAZ,I,wFC7JDvC,EAAYC,YAAW,CAC3BiE,KAAM,CACJC,SAAU,KAEZC,YAAa,CACXC,UAAW,QAEbC,WAAY,CACVzD,MAAO,MACP+C,SAAU,YAEZW,WAAY,CACVxD,QAAS,GAEXyD,IAAK,CACHH,UAAW,QACXI,SAAU,OACV5D,MAAO,OACP+C,SAAU,WACV,gBAAiB,UACjBc,MAAO,OAETC,YAAa,CACXf,SAAU,YAEZgB,YAAa,CACXC,OAAQ,WAIG,SAASC,EAAaC,GACnC,IAAMxD,EAAUvB,IACR4C,EAA0CmC,EAA1CnC,GAAIoC,EAAsCD,EAAtCC,OAAQJ,EAA8BG,EAA9BH,YAAaK,EAAiBF,EAAjBE,QAAST,EAAQO,EAARP,IAFA,EAIhB/C,mBAAS,GAJO,mBAInCyD,EAJmC,KAI5BC,EAJ4B,KAU1C,OACE,kBAACC,EAAA,EAAD,CAAM1B,UAAWnC,EAAQ2C,KAAMmB,IAAKzC,GAClC,kBAAC0C,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAWC,UAAU,MAAMX,OAAO,MAAMY,MAAOT,IAC/C,kBAACU,EAAA,EAAD,CAAahC,UAAWnC,EAAQ6C,aAC9B,kBAACN,EAAA,EAAD,CAAY6B,cAAY,EAAC5B,QAAQ,KAAKyB,UAAU,MAC7CP,GAEH,kBAACnB,EAAA,EAAD,CACEC,QAAQ,QACRlD,MAAM,gBACN2E,UAAU,IACV9B,UAAWnC,EAAQqD,aAElBA,KAIP,kBAACgB,EAAA,EAAD,CAAalC,UAAWnC,EAAQoD,aAC9B,kBAAC,IAAD,CACEtB,aAAW,OACXwC,KAAK,SACLhF,MAAM,QACNqC,QA3Bc,WACpBiC,EAASD,EAAQ,KA4BX,kBAAC,IAAD,OAEF,kBAAC,IAAD,CAAY7B,aAAW,UAAUwC,KAAK,SAAShF,MAAM,SACnD,kBAAC,IAAD,OAEF,kBAACiD,EAAA,EAAD,CACEC,QAAQ,YACRlD,MAAM,gBACN2E,UAAU,IACV9B,UAAWnC,EAAQiD,KAJrB,eAMeA,K,aCHRsB,EAhFO,CACpB,CACElD,GAAI,SACJmD,KAAM,sBACNC,UAAW,aACXpB,YACE,gQACFqB,UAAW,CACTC,IACE,yFAGN,CACEtD,GAAI,SACJmD,KAAM,OACNC,UAAW,aACXpB,YACE,6OACFqB,UAAW,CACTC,IACE,yFAGN,CACEtD,GAAI,SACJmD,KAAM,gBACNC,UAAW,aACXpB,YACE,gPACFqB,UAAW,CACTC,IACE,yFAGN,CACEtD,GAAI,SACJmD,KAAM,cACNC,UAAW,aACXpB,YACE,sRACFqB,UAAW,CACTC,IACE,yFAGN,CACEtD,GAAI,SACJmD,KAAM,wBACNC,UAAW,aACXpB,YACE,kOACFqB,UAAW,CACTC,IACE,yFAGN,CACEtD,GAAI,SACJmD,KAAM,WACNC,UAAW,aACXpB,YACE,6MACFqB,UAAW,CACTC,IACE,yFAGN,CACEtD,GAAI,SACJmD,KAAM,QACNC,UAAW,aACXpB,YACE,oPACFqB,UAAW,CACTC,IACE,0FC1EFlG,EAAYC,YAAW,CAC3BkG,cAAe,CACbxF,QAAS,OACTyF,eAAgB,UAElBC,SAAU,CACRC,UAAW,QACXvF,QAAS,UA2BEwF,EAvBS,WACtB,IAAMhF,EAAUvB,IAChB,OACE,6BACE,kBAACwG,EAAA,EAAD,CAAMC,WAAS,EAAClG,QAAS,GAAImD,UAAWnC,EAAQ4E,eAC7CL,EAAcY,KAAI,SAAAxC,GACjB,OACE,kBAACsC,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIlD,UAAWnC,EAAQ8E,UACpC,kBAAC,EAAD,CACEzD,GAAIsB,EAAKtB,GACToC,OAAQd,EAAK+B,UAAUC,IACvBtB,YAAaV,EAAKU,YAClBK,QAASf,EAAK6B,KACdvB,IAAKN,EAAK8B,mBCtBpBa,EAAS,IAAIC,IAAa,CAC9BC,IAAK,wDAgBQC,MAbf,WACE,OACE,kBAAC,IAAD,CAAgBH,OAAQA,GACtB,yBAAKnD,UAAU,OACb,kBAAC,EAAD,MACA,0BAAMA,UAAU,QACd,kBAAC,EAAD,UCNU3B,QACW,cAA7BkF,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.d31c6d98.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";","import React from \"react\";\r\nimport { fade, makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport Badge from \"@material-ui/core/Badge\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\r\nimport MailIcon from \"@material-ui/icons/Mail\";\r\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\r\nimport MoreIcon from \"@material-ui/icons/MoreVert\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  grow: {\r\n    flexGrow: 1\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  title: {\r\n    // display: \"none\",\r\n    [theme.breakpoints.up(\"xs\")]: {\r\n      display: \"block\"\r\n    }\r\n  },\r\n  inputRoot: {\r\n    color: \"inherit\"\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 7),\r\n    transition: theme.transitions.create(\"width\"),\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      width: 200\r\n    }\r\n  },\r\n  sectionDesktop: {\r\n    display: \"none\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      display: \"flex\"\r\n    }\r\n  },\r\n  sectionMobile: {\r\n    display: \"flex\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      display: \"none\"\r\n    }\r\n  }\r\n}));\r\n\r\nconst PrimarySearchAppBar = () => {\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\r\n\r\n  const isMenuOpen = Boolean(anchorEl);\r\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\r\n\r\n  const handleProfileMenuOpen = event => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleMobileMenuClose = () => {\r\n    setMobileMoreAnchorEl(null);\r\n  };\r\n\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null);\r\n    handleMobileMenuClose();\r\n  };\r\n\r\n  const handleMobileMenuOpen = event => {\r\n    setMobileMoreAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const menuId = \"primary-search-account-menu\";\r\n  const renderMenu = (\r\n    <Menu\r\n      anchorEl={anchorEl}\r\n      anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      id={menuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      open={isMenuOpen}\r\n      onClose={handleMenuClose}\r\n    >\r\n      <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\r\n      <MenuItem onClick={handleMenuClose}>My account</MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  const mobileMenuId = \"primary-search-account-menu-mobile\";\r\n  const renderMobileMenu = (\r\n    <Menu\r\n      anchorEl={mobileMoreAnchorEl}\r\n      anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      id={mobileMenuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      open={isMobileMenuOpen}\r\n      onClose={handleMobileMenuClose}\r\n    >\r\n      <MenuItem>\r\n        <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\r\n          <Badge badgeContent={4} color=\"secondary\">\r\n            <FavoriteIcon />\r\n          </Badge>\r\n        </IconButton>\r\n        <p>Liked Products</p>\r\n      </MenuItem>\r\n      <MenuItem onClick={handleProfileMenuOpen}>\r\n        <IconButton\r\n          aria-label=\"account of current user\"\r\n          aria-controls=\"primary-search-account-menu\"\r\n          aria-haspopup=\"true\"\r\n          color=\"inherit\"\r\n        >\r\n          <AccountCircle />\r\n        </IconButton>\r\n        <p>Profile</p>\r\n      </MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  return (\r\n    <div className={classes.grow}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <Typography className={classes.title} variant=\"h6\" noWrap>\r\n            Product Hunt\r\n          </Typography>\r\n          <div className={classes.grow} />\r\n          <div className={classes.sectionDesktop}>\r\n            <IconButton aria-label=\"show 4 new liked\" color=\"inherit\">\r\n              <Badge badgeContent={4} color=\"secondary\">\r\n                <FavoriteIcon />\r\n              </Badge>\r\n            </IconButton>\r\n            \r\n            <IconButton\r\n              edge=\"end\"\r\n              aria-label=\"account of current user\"\r\n              aria-controls={menuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleProfileMenuOpen}\r\n              color=\"inherit\"\r\n            >\r\n              <AccountCircle />\r\n            </IconButton>\r\n          </div>\r\n          <div className={classes.sectionMobile}>\r\n            <IconButton\r\n              aria-label=\"show more\"\r\n              aria-controls={mobileMenuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleMobileMenuOpen}\r\n              color=\"inherit\"\r\n            >\r\n              <MoreIcon />\r\n            </IconButton>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n      {renderMobileMenu}\r\n      {renderMenu}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PrimarySearchAppBar;\r\n","import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/Button\";\r\nimport FavoriteBorderOutlinedIcon from \"@material-ui/icons/FavoriteBorderOutlined\";\r\nimport AddCommentOutlinedIcon from \"@material-ui/icons/AddCommentOutlined\";\r\n\r\nconst useStyles = makeStyles({\r\n  card: {\r\n    maxWidth: 345\r\n  },\r\n  cardContent: {\r\n    textAlign: \"left\"\r\n  },\r\n  likeButton: {\r\n    color: \"red\",\r\n    position: \"relative\"\r\n  },\r\n  iconButton: {\r\n    padding: 0\r\n  },\r\n  day: {\r\n    textAlign: \"right\",\r\n    fontSize: \"10px\",\r\n    color: \"gray\",\r\n    position: \"absolute\",\r\n    \"padding-right\": \"inherit\",\r\n    right: \"8px\"\r\n  },\r\n  cardActions: {\r\n    position: \"relative\"\r\n  },\r\n  description: {\r\n    height: \"120px\"\r\n  }\r\n});\r\n\r\nexport default function ImgMediaCard(props) {\r\n  const classes = useStyles();\r\n  const { id, imgSrc, description, heading, day } = props;\r\n\r\n  const [likes, setLikes] = useState(0);\r\n\r\n  const onLikeHandler = () => {\r\n    setLikes(likes + 1);\r\n  };\r\n\r\n  return (\r\n    <Card className={classes.card} key={id}>\r\n      <CardActionArea>\r\n        <CardMedia component=\"img\" height=\"240\" image={imgSrc} />\r\n        <CardContent className={classes.cardContent}>\r\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n            {heading}\r\n          </Typography>\r\n          <Typography\r\n            variant=\"body2\"\r\n            color=\"textSecondary\"\r\n            component=\"p\"\r\n            className={classes.description}\r\n          >\r\n            {description}\r\n          </Typography>\r\n        </CardContent>\r\n      </CardActionArea>\r\n      <CardActions className={classes.cardActions}>\r\n        <IconButton\r\n          aria-label=\"like\"\r\n          size=\"medium\"\r\n          color=\"black\"\r\n          onClick={onLikeHandler}\r\n        >\r\n          <FavoriteBorderOutlinedIcon />\r\n        </IconButton>\r\n        <IconButton aria-label=\"comment\" size=\"medium\" color=\"black\">\r\n          <AddCommentOutlinedIcon />\r\n        </IconButton>\r\n        <Typography\r\n          variant=\"subtitle2\"\r\n          color=\"textSecondary\"\r\n          component=\"p\"\r\n          className={classes.day}\r\n        >\r\n          Posted on | {day}\r\n        </Typography>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n}\r\n","const imgIDArray = () => {\r\n  const imgId = Math.floor(Math.random() * 1000 + 1);\r\n  return \"https://picsum.photos/id/\" + imgId + \"/500\";\r\n};\r\n\r\nconst cardListDummy = [\r\n  {\r\n    id: \"171731\",\r\n    name: \"Buy Me A Coffee 2.0\",\r\n    createdAt: \"2019-10-21\",\r\n    description:\r\n      \"Embeddable widgets, Recurring payments, iOS app, Zapier integrations, and a new look ☀️☕️ - For the App invite, please leave your BMC link in the comments and I'll email you the Testflight (and even buy your next coffee 🎉)\",\r\n    thumbnail: {\r\n      url:\r\n        \"https://ph-files.imgix.net/ad1563be-9426-4e89-9f13-f691c8e45272?auto=format&fit=crop\"\r\n    }\r\n  },\r\n  {\r\n    id: \"171680\",\r\n    name: \"Lazy\",\r\n    createdAt: \"2019-10-21\",\r\n    description:\r\n      \"💻Keyboard-driven commands to manage your surroundings directly from your mac. Meet the Lazy Command line by hitting ⌥ + ⌘ + K and find all your IoT devices and services in one place. One shortcut to rule them all.\",\r\n    thumbnail: {\r\n      url:\r\n        \"https://ph-files.imgix.net/2cf58e08-6e29-42db-9653-3173b313c46a?auto=format&fit=crop\"\r\n    }\r\n  },\r\n  {\r\n    id: \"171781\",\r\n    name: \"Culrs Mac App\",\r\n    createdAt: \"2019-10-21\",\r\n    description:\r\n      \"Culrs web app has now been reimagined into a mac app to simplify and accelerate the process of choosing colors for your design. Easy to access with the shortcut ⌘+E, this app sits in your mac menubar, ready for whenever you need it.\",\r\n    thumbnail: {\r\n      url:\r\n        \"https://ph-files.imgix.net/f1b97929-9dcc-4713-afce-fd5ed5ec4e25?auto=format&fit=crop\"\r\n    }\r\n  },\r\n  {\r\n    id: \"171610\",\r\n    name: \"Disha Pages\",\r\n    createdAt: \"2019-10-21\",\r\n    description:\r\n      \"Disha Pages allows you create one-page sites with elements such as buttons, photos, carousels, lists, text, links and YouTube videos. Style your page to suit your brand. Get insights on page views, top links, and total clicks. Light & dark mode, custom domains, SEO friendly.\",\r\n    thumbnail: {\r\n      url:\r\n        \"https://ph-files.imgix.net/f1a3724f-1a93-4f7b-8c9f-9124f3438516?auto=format&fit=crop\"\r\n    }\r\n  },\r\n  {\r\n    id: \"171721\",\r\n    name: \"Figma Product Planner\",\r\n    createdAt: \"2019-10-21\",\r\n    description:\r\n      \"Product Planner makes the process more comfortable to get started, product planning, product insights, identifying risks, setting goals and identifying and solving problems. Use the prebuilt template relevant to your tasks.\",\r\n    thumbnail: {\r\n      url:\r\n        \"https://ph-files.imgix.net/2c065d37-ac7d-4d6f-965c-501860fdc971?auto=format&fit=crop\"\r\n    }\r\n  },\r\n  {\r\n    id: \"171708\",\r\n    name: \"ISA List\",\r\n    createdAt: \"2019-10-21\",\r\n    description:\r\n      \"ISA List is an index of companies offering Income Share Agreements, or facilitating the growth of the industry. The index includes over 75 bootcamps, colleges, servicers, and more involved in the space.\",\r\n    thumbnail: {\r\n      url:\r\n        \"https://ph-files.imgix.net/736aecb5-1a2c-41cd-8176-2b2753feadd4?auto=format&fit=crop\"\r\n    }\r\n  },\r\n  {\r\n    id: \"171734\",\r\n    name: \"Prism\",\r\n    createdAt: \"2019-10-21\",\r\n    description:\r\n      \"Found a site you love? Save it to Prism! Bookmark your favorite sites and browse them using up-to-date screenshots, so you never lose what you love online. Share boards with friends, or invite people to Prism to see their favorite bookmarks.\",\r\n    thumbnail: {\r\n      url:\r\n        \"https://ph-files.imgix.net/a5927d38-4f98-4b31-8120-a092ef5219fb?auto=format&fit=crop\"\r\n    }\r\n  }\r\n];\r\n\r\nexport default cardListDummy;\r\n","import React, { useState } from \"react\";\r\nimport ProductCard from \"./ProductCard\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport cardListDummy from \"../../data/static-data\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles({\r\n  gridContainer: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n  },\r\n  gridItem: {\r\n    flexBasis: \"unset\",\r\n    padding: \"12px\"\r\n  }\r\n});\r\n\r\nconst ProductCardList = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div>\r\n      <Grid container spacing={24} className={classes.gridContainer}>\r\n        {cardListDummy.map(card => {\r\n          return (\r\n            <Grid item xs={12} className={classes.gridItem}>\r\n              <ProductCard\r\n                id={card.id}\r\n                imgSrc={card.thumbnail.url}\r\n                description={card.description}\r\n                heading={card.name}\r\n                day={card.createdAt}\r\n              ></ProductCard>\r\n            </Grid>\r\n          );\r\n        })}\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductCardList;\r\n","import React from \"react\";\nimport ApolloClient from \"apollo-boost\";\nimport { ApolloProvider } from \"react-apollo\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport PrimarySearchAppBar from \"./components/appBar/PrimarySearchAppBar\";\nimport ProductCardList from \"./components/productCard/ProductCardList\";\n\nconst client = new ApolloClient({\n  uri: \"https://ph-graph-api-explorer.herokuapp.com/graphql\"\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <div className=\"App\">\n        <PrimarySearchAppBar></PrimarySearchAppBar>\n        <main className=\"main\">\n          <ProductCardList></ProductCardList>\n        </main>\n      </div>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}